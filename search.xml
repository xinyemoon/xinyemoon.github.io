<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>XML学习笔记</title>
      <link href="/2022/09/22/XML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/09/22/XML%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><ul><li>XML 是指可扩展标记语言:Extensible Markup Language</li><li>被设计为传输数据和存储数据</li><li>需要自行定义标签</li><li>具有自我描述型</li><li>不作为，XML 被设计用来结构化、存储以及传输信息</li></ul><h4 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h4><ul><li>XML 把数据从 HTML 分离</li><li>XML 简化数据共享和数据传输</li><li>XML 简化平台变更</li><li>XML 使你的数据更有用</li><li>XML 用于创建新的Internet语言</li></ul><h4 id="简单的-XML-实例"><a href="#简单的-XML-实例" class="headerlink" title="简单的 XML 实例"></a>简单的 XML 实例</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span><br><span class="line">&lt;note&gt;</span><br><span class="line">&lt;to&gt;George&lt;/to&gt;</span><br><span class="line">&lt;from&gt;John&lt;/from&gt;</span><br><span class="line">&lt;heading&gt;Reminder&lt;/heading&gt;</span><br><span class="line">&lt;body&gt;Don&#x27;t forget the meeting!&lt;/body&gt;</span><br><span class="line">&lt;/note&gt;</span><br></pre></td></tr></table></figure><ul><li><p>XML 文档形成一种树结构</p><ul><li>该文档树从根部开始，并扩展到树的最低端</li></ul></li><li><p>必须包含根元素。</p><ul><li>是其他元素的父元素</li></ul></li><li><p>图例</p></li></ul><p><img src="https://raw.githubusercontent.com/xinyemoon/Image/master/Note/202209202251295.png" alt="image-20220918212803392"></p><h4 id="XML-语法"><a href="#XML-语法" class="headerlink" title="XML 语法"></a>XML 语法</h4><ul><li>所有元素都必须有关闭标签</li><li>对大小写敏感</li><li>正确的嵌套</li><li>必须有根元素</li><li>XML 的属性值必须加引号</li><li>实体引用<ul><li>&lt; 和 &amp; 的是不能直接引用的</li></ul></li><li>注释同 HTML 相似</li><li>空格会被保留</li><li>以 LF 存储换行</li></ul><h4 id="XML-元素"><a href="#XML-元素" class="headerlink" title="XML 元素"></a>XML 元素</h4><ul><li><p>一个元素可以包含：其他元素，文本，属性，或者混合所有</p></li><li><p>命名规则</p><ul><li>名称可以包含字母、数字以及其他的字符</li><li>名称不能以数字或者标点符号开始</li><li>名称不能以字母 xml 或者 XML，Xml 等开始</li><li>名称不能包含空格</li></ul></li><li><p>建议命名习惯</p><ul><li>简短，具有描述性，避免 - . : 等字符</li></ul></li><li><p>XML 元素是可扩展的</p></li></ul><h4 id="XML-属性"><a href="#XML-属性" class="headerlink" title="XML 属性"></a>XML 属性</h4><ul><li>Attribute 提供有关元素的额外信息，类型于 HTML</li><li>XML 属性必须加引号</li><li>尽量避免用属性，如果看起来像数据，那么请使用元素，仅仅使用属性来提高一些与数据无关的信息<ul><li>原因<ul><li>属性不能包含多个值</li><li>属性不能包含树结构</li><li>属性不易扩展</li><li>难以阅读和维护</li></ul></li></ul></li><li>针对元数据的 XML 属性<ul><li>向元素分配 ID 引用，可用标识 XML 元素，作为一个标识符</li></ul></li><li><em><strong>元数据（有关数据的数据）应当存储为属性，而数据本身应当存储为元素。</strong></em></li></ul><h4 id="XML-验证"><a href="#XML-验证" class="headerlink" title="XML 验证"></a>XML 验证</h4><ul><li><p>拥有正确格式的 XML 被称为“形式良好”的 XML</p></li><li><p>可通过 DTD 验证 XML 是否“合法”</p><ul><li>DTD 的目的是定义 XML 文档的结构</li></ul></li><li><p>W3C 支持替代 DTD 的替代者，为 XML Schema</p></li><li><p>XML 文档中的错误会终止您的 XML 应用程序</p><ul><li>W3C 的 XML 规范声明：如果 XML 文档存在错误，那么程序就不应当继续处理这个文档。理由是，XML 软件应当轻巧，快速，具有良好的兼容性。</li></ul></li></ul><h4 id="查看-XML-文件"><a href="#查看-XML-文件" class="headerlink" title="查看 XML 文件"></a>查看 XML 文件</h4><ul><li>在所有主流的浏览器中，均能够查看原始的 XML 文件</li><li>XML 文件不会直接显示为 HTML 页面<ul><li>原因<ul><li>XML 文档不会携带如何显示数据的信息<br>浏览器无法确定如<code>&lt;table&gt;</code>标签描述为 HTML 表格还是餐桌</li></ul></li></ul></li></ul><h4 id="显示-XML"><a href="#显示-XML" class="headerlink" title="显示 XML"></a>显示 XML</h4><ul><li>通过使用 CSS(Cascading Style Sheets 层叠样式表)，你可以添加显示信息到 XML 文档中 (不建议)</li><li>例子</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span><br><span class="line">&lt;?xml-stylesheet type=&quot;text/css&quot; href=&quot;cd_catalog.css&quot;?&gt;</span><br><span class="line">&lt;CATALOG&gt;</span><br><span class="line">&lt;CD&gt;</span><br><span class="line">&lt;TITLE&gt;Empire Burlesque&lt;/TITLE&gt;</span><br><span class="line">&lt;ARTIST&gt;Bob Dylan&lt;/ARTIST&gt;</span><br><span class="line">&lt;COUNTRY&gt;USA&lt;/COUNTRY&gt;</span><br><span class="line">&lt;COMPANY&gt;Columbia&lt;/COMPANY&gt;</span><br><span class="line">&lt;PRICE&gt;10.90&lt;/PRICE&gt;</span><br><span class="line">&lt;YEAR&gt;1985&lt;/YEAR&gt;</span><br><span class="line">&lt;/CD&gt;</span><br><span class="line">&lt;CD&gt;</span><br><span class="line">&lt;TITLE&gt;Hide your heart&lt;/TITLE&gt;</span><br><span class="line">&lt;ARTIST&gt;Bonnie Tyler&lt;/ARTIST&gt;</span><br><span class="line">&lt;COUNTRY&gt;UK&lt;/COUNTRY&gt;</span><br><span class="line">&lt;COMPANY&gt;CBS Records&lt;/COMPANY&gt;</span><br><span class="line">&lt;PRICE&gt;9.90&lt;/PRICE&gt;</span><br><span class="line">&lt;YEAR&gt;1988&lt;/YEAR&gt;</span><br><span class="line">&lt;/CD&gt;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">&lt;/CATALOG&gt;</span><br></pre></td></tr></table></figure><ul><li>通过 XSLT(eXtensible Stylesheet Language Transformations),把 XML 文档转化成 HTML 格式<ul><li>首选的 XML 样式表语言</li><li>功能比 CSS 更完善</li></ul></li></ul><h4 id="XML-JavaScript"><a href="#XML-JavaScript" class="headerlink" title="XML JavaScript"></a>XML JavaScript</h4><h5 id="XMLHttpRequest"><a href="#XMLHttpRequest" class="headerlink" title="XMLHttpRequest"></a>XMLHttpRequest</h5><ul><li>XML HttpRequest 对象用于在后台与服务器交换数据<ul><li>能不加载页面的情况下更新网页</li><li>在页面已加载后从服务器请求数据，接受数据</li><li>在后台向服务器发送数据</li></ul></li><li>创建一个 XMLHttpRequest实例</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//创建 XMLHttpRequest 对象的语法</span><br><span class="line">xmlhttp=new XMLHttpRequest();</span><br><span class="line">//旧版本的Internet Explorer（IE5和IE6）中使用 ActiveX 对象</span><br><span class="line">xmlhttp=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span><br></pre></td></tr></table></figure><h5 id="XML-Parser"><a href="#XML-Parser" class="headerlink" title="XML Parser"></a>XML Parser</h5><ul><li>XML 解析器把 XML 文档转换为 XML DOM对象，可以通过 JavaScript 操作的对象<ul><li>Internet Explorer 使用 <code>loadXML()</code>方法解析 XML 字符串，其他浏览器用 <code>DOMParser</code></li></ul></li><li>解析 XML 例子</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">if (window.XMLHttpRequest)</span><br><span class="line">&#123;// code for IE7+, Firefox, Chrome, Opera, Safari</span><br><span class="line">xmlhttp=new XMLHttpRequest();</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;// code for IE6, IE5</span><br><span class="line">xmlhttp=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span><br><span class="line">&#125;</span><br><span class="line">xmlhttp.open(&quot;GET&quot;,&quot;books.xml&quot;,false);</span><br><span class="line">xmlhttp.send();</span><br><span class="line">xmlDoc=xmlhttp.responseXML;</span><br></pre></td></tr></table></figure><ul><li>解析 XML 字符串例子</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">txt=&quot;&lt;bookstore&gt;&lt;book&gt;&quot;;</span><br><span class="line">txt=txt+&quot;&lt;title&gt;Everyday Italian&lt;/title&gt;&quot;;</span><br><span class="line">txt=txt+&quot;&lt;author&gt;Giada De Laurentiis&lt;/author&gt;&quot;;</span><br><span class="line">txt=txt+&quot;&lt;year&gt;2005&lt;/year&gt;&quot;;</span><br><span class="line">txt=txt+&quot;&lt;/book&gt;&lt;/bookstore&gt;&quot;;</span><br><span class="line"></span><br><span class="line">if (window.DOMParser)</span><br><span class="line">&#123;</span><br><span class="line">parser=new DOMParser();</span><br><span class="line">xmlDoc=parser.parseFromString(txt,&quot;text/xml&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else // Internet Explorer</span><br><span class="line">&#123;</span><br><span class="line">xmlDoc=new ActiveXObject(&quot;Microsoft.XMLDOM&quot;);</span><br><span class="line">xmlDoc.async=false;</span><br><span class="line">xmlDoc.loadXML(txt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="XML-DOM"><a href="#XML-DOM" class="headerlink" title="XML DOM"></a>XML DOM</h5><ul><li><p>DOM(Document Object Model 文档对象模型)定义了访问和操作文档的标注方法</p></li><li><p>把 XML 文档作为树结构来查看</p></li><li><p>所有元素都可以通过 DOM 树来访问。</p><ul><li>可以修改，删除，创建</li></ul></li><li><p>元素，文本，属性都被认为是节点</p></li><li><p>加载一个 XML 文件 例子</p><ul><li>请注意，即使 XML 文件只包含一个 <to> 元素，您仍然必须指定数组索引 [0]。这是因为 <code>getElementsByTagName()</code> 方法返回一个数组。</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">//该实例把 XML 文档（&quot;note.xml&quot;）解析到 XML DOM 对象中，然后通过 JavaScript 提取一些信息</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;W3Schools Internal Note&lt;/h1&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;b&gt;To:&lt;/b&gt; &lt;span id=&quot;to&quot;&gt;&lt;/span&gt;&lt;br /&gt;</span><br><span class="line">&lt;b&gt;From:&lt;/b&gt; &lt;span id=&quot;from&quot;&gt;&lt;/span&gt;&lt;br /&gt;</span><br><span class="line">&lt;b&gt;Message:&lt;/b&gt; &lt;span id=&quot;message&quot;&gt;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">if (window.XMLHttpRequest)</span><br><span class="line">&#123;// code for IE7+, Firefox, Chrome, Opera, Safari</span><br><span class="line">xmlhttp=new XMLHttpRequest();</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;// code for IE6, IE5</span><br><span class="line">xmlhttp=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;);</span><br><span class="line">&#125;</span><br><span class="line">xmlhttp.open(&quot;GET&quot;,&quot;note.xml&quot;,false);</span><br><span class="line">xmlhttp.send();</span><br><span class="line">xmlDoc=xmlhttp.responseXML;</span><br><span class="line"></span><br><span class="line">document.getElementById(&quot;to&quot;).innerHTML=</span><br><span class="line">xmlDoc.getElementsByTagName(&quot;to&quot;)[0].childNodes[0].nodeValue;</span><br><span class="line">document.getElementById(&quot;from&quot;).innerHTML=</span><br><span class="line">xmlDoc.getElementsByTagName(&quot;from&quot;)[0].childNodes[0].nodeValue;</span><br><span class="line">document.getElementById(&quot;message&quot;).innerHTML=</span><br><span class="line">xmlDoc.getElementsByTagName(&quot;body&quot;)[0].childNodes[0].nodeValue;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ul><li>加载一个 XML 字符串 - 跨浏览器实例</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;W3Schools Internal Note&lt;/h1&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;b&gt;To:&lt;/b&gt; &lt;span id=&quot;to&quot;&gt;&lt;/span&gt;&lt;br /&gt;</span><br><span class="line">&lt;b&gt;From:&lt;/b&gt; &lt;span id=&quot;from&quot;&gt;&lt;/span&gt;&lt;br /&gt;</span><br><span class="line">&lt;b&gt;Message:&lt;/b&gt; &lt;span id=&quot;message&quot;&gt;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">txt=&quot;&lt;note&gt;&quot;;</span><br><span class="line">txt=txt+&quot;&lt;to&gt;Tove&lt;/to&gt;&quot;;</span><br><span class="line">txt=txt+&quot;&lt;from&gt;Jani&lt;/from&gt;&quot;;</span><br><span class="line">txt=txt+&quot;&lt;heading&gt;Reminder&lt;/heading&gt;&quot;;</span><br><span class="line">txt=txt+&quot;&lt;body&gt;Don&#x27;t forget me this weekend!&lt;/body&gt;&quot;;</span><br><span class="line">txt=txt+&quot;&lt;/note&gt;&quot;;</span><br><span class="line"></span><br><span class="line">if (window.DOMParser)</span><br><span class="line">&#123;</span><br><span class="line">parser=new DOMParser();</span><br><span class="line">xmlDoc=parser.parseFromString(txt,&quot;text/xml&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else // Internet Explorer</span><br><span class="line">&#123;</span><br><span class="line">xmlDoc=new ActiveXObject(&quot;Microsoft.XMLDOM&quot;);</span><br><span class="line">xmlDoc.async=false;</span><br><span class="line">xmlDoc.loadXML(txt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">document.getElementById(&quot;to&quot;).innerHTML=</span><br><span class="line">xmlDoc.getElementsByTagName(&quot;to&quot;)[0].childNodes[0].nodeValue;</span><br><span class="line">document.getElementById(&quot;from&quot;).innerHTML=</span><br><span class="line">xmlDoc.getElementsByTagName(&quot;from&quot;)[0].childNodes[0].nodeValue;</span><br><span class="line">document.getElementById(&quot;message&quot;).innerHTML=</span><br><span class="line">xmlDoc.getElementsByTagName(&quot;body&quot;)[0].childNodes[0].nodeValue;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="XML-进阶"><a href="#XML-进阶" class="headerlink" title="XML 进阶"></a>XML 进阶</h4><h5 id="XML-命名空间"><a href="#XML-命名空间" class="headerlink" title="XML 命名空间"></a>XML 命名空间</h5><ul><li>提供避免元素命名冲突的方法<ul><li>使用前缀来避免命名冲突</li></ul></li><li>通过开始标签的 xmlns 属性中定义 用于前缀的命名空间</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">语法：xmlns:前缀=&quot;URI&quot;</span><br><span class="line"></span><br><span class="line">//例子1</span><br><span class="line">//&lt;table&gt; 标签的 xmlns 属性定义了 h: 和 f: 前缀的合格命名空间。</span><br><span class="line">//当命名空间被定义在元素的开始标签中时，所有带有相同前缀的子元素都会与同一个命名空间相关联。</span><br><span class="line"></span><br><span class="line">命名空间，可以在他们被使用的元素中或者在 XML 根元素中声明：</span><br><span class="line">&lt;root&gt;</span><br><span class="line"></span><br><span class="line">&lt;h:table xmlns:h=&quot;http://www.w3.org/TR/html4/&quot;&gt;</span><br><span class="line">&lt;h:tr&gt;</span><br><span class="line">&lt;h:td&gt;Apples&lt;/h:td&gt;</span><br><span class="line">&lt;h:td&gt;Bananas&lt;/h:td&gt;</span><br><span class="line">&lt;/h:tr&gt;</span><br><span class="line">&lt;/h:table&gt;</span><br><span class="line"></span><br><span class="line">&lt;f:table xmlns:f=&quot;http://www.w3cschool.cc/furniture&quot;&gt;</span><br><span class="line">&lt;f:name&gt;African Coffee Table&lt;/f:name&gt;</span><br><span class="line">&lt;f:width&gt;80&lt;/f:width&gt;</span><br><span class="line">&lt;f:length&gt;120&lt;/f:length&gt;</span><br><span class="line">&lt;/f:table&gt;</span><br><span class="line"></span><br><span class="line">&lt;/root&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//例子2</span><br><span class="line">&lt;root xmlns:h=&quot;http://www.w3.org/TR/html4/&quot;</span><br><span class="line">xmlns:f=&quot;http://www.w3cschool.cc/furniture&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;h:table&gt;</span><br><span class="line">&lt;h:tr&gt;</span><br><span class="line">&lt;h:td&gt;Apples&lt;/h:td&gt;</span><br><span class="line">&lt;h:td&gt;Bananas&lt;/h:td&gt;</span><br><span class="line">&lt;/h:tr&gt;</span><br><span class="line">&lt;/h:table&gt;</span><br><span class="line"></span><br><span class="line">&lt;f:table&gt;</span><br><span class="line">&lt;f:name&gt;African Coffee Table&lt;/f:name&gt;</span><br><span class="line">&lt;f:width&gt;80&lt;/f:width&gt;</span><br><span class="line">&lt;f:length&gt;120&lt;/f:length&gt;</span><br><span class="line">&lt;/f:table&gt;</span><br><span class="line"></span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure><p> 注释：命名空间URI不会被解析器用于查找信息，其目的是赋予命名空间一个惟一的名称</p><ul><li>为元素定义默认的命名空间可以让我们省去在所有的子元素中使用前缀的工作。它的语法如下</li><li><code>xmlns=&quot;*namespaceURI*&quot;</code></li></ul><h6 id="URI"><a href="#URI" class="headerlink" title="URI"></a>URI</h6><ul><li>统一资源标识符（URI，全称 Uniform Resource Identifier）</li><li>用于标识因特网资源的字符</li><li>常用的 URI 是是用来标识因特网地址的统一资源定位器(URL),另一个少用的URI是统一资源命名(URN)</li></ul><h5 id="CDATA-和-PCDATA"><a href="#CDATA-和-PCDATA" class="headerlink" title="CDATA 和 PCDATA"></a>CDATA 和 PCDATA</h5><ul><li><p>XML 文档中的所有文本均会被解析器解析</p></li><li><p>被解析的字符数据(PCDATA)</p><ul><li>XML 解析器通常会解析 XML 文档中所有的文本。</li><li>解析字符数据（PCDATA）是 XML 解析器解析的文本数据使用的一个术语</li></ul></li><li><p>未解析的字符数据(CDATA)</p><ul><li><p>只有 CDATA 区段中的文本会被解析器忽略</p></li><li><p>术语 CDATA 是不应该由 XML 解析器解析的文本数据</p></li><li><p>像 “&lt;” 和 “&amp;” 字符在 XML 元素中都是非法的</p><ul><li><p>“&lt;” 会产生错误，因为解析器会把该字符解释为新元素的开始</p></li><li><p>“&amp;” 会产生错误，因为解析器会把该字符解释为字符实体的开始</p></li></ul></li><li><p>某些文本，比如 JavaScript 代码，包含大量 “&lt;” 或 “&amp;” 字符。为了避免错误，可以将脚本代码定义为 CDATA</p></li><li><p>语法 ：”<strong><code>&lt;![CDATA[</code></strong>“ 开始，由 “<strong><code>]]&gt;</code></strong>“ 结束</p></li></ul></li></ul><h5 id="XML-编码"><a href="#XML-编码" class="headerlink" title="XML 编码"></a>XML 编码</h5><ul><li>XML 文档可以包含非 ASCII 字符，比如挪威语 æ ø å，或者法语 ê è é</li><li>为了避免错误，需要规定 XML 编码，或者将 XML 文件存为 <code>Unicode</code></li><li>始终使用编码属性</li><li>使用支持编码的编辑器</li><li>确保您知道编辑器使用什么编码</li><li>在您的编码属性中使用相同的编码</li></ul><h5 id="服务器上的-XML"><a href="#服务器上的-XML" class="headerlink" title="服务器上的 XML"></a>服务器上的 XML</h5><ul><li>XML 文件是类似 HTML 文件的纯文本文件</li><li>XML 能够通过标准的 Web 服务器轻松地存储和生成<ul><li>Internet 服务器上进行存储的方式与 HTML 文件完全相同</li></ul></li></ul><h5 id="XML-注意事项"><a href="#XML-注意事项" class="headerlink" title="XML 注意事项"></a>XML 注意事项</h5><ul><li><p>使用 XML 时应该尽量避免使用的技术</p><ul><li><p>Internet Explorer - XML 数据岛</p></li><li><p>Internet Explorer - 行为</p></li></ul></li></ul><h5 id="XML-相关技术"><a href="#XML-相关技术" class="headerlink" title="XML 相关技术"></a>XML 相关技术</h5><ul><li><p>XHTML (可扩展 HTML)</p><ul><li>更纯净的基于 XML 的 HTML 版本</li></ul></li><li><p>XML DOM (XML 文档对象模型)</p><ul><li>访问和操作 XML 的标准文档模型</li></ul></li><li><p><a href="https://www.runoob.com/xsl/xsl-tutorial.html">XSL (可扩展样式表语言)</a> XSL 包含三个部分</p><ul><li><a href="https://www.runoob.com/xsl/xsl-tutorial.html">XSLT</a> (XSL 转换) - 把 XML 转换为其他格式，比如 HTML</li><li><a href="https://www.runoob.com/xslfo/xslfo-tutorial.html">XSL-FO</a> (XSL 格式化对象)- 用于格式化 XML 文档的语言</li><li><a href="https://www.runoob.com/xpath/xpath-tutorial.html">XPath</a> - 用于导航 XML 文档的语言</li></ul></li><li><p>DTD (文档类型定义)</p><ul><li>用于定义 XML 文档中的合法元素的标准</li></ul></li><li><p>XSD (XML 架构)</p><ul><li>基于 XML 的 DTD 替代物。</li></ul></li><li><p>XQuery(XML查询语言)</p><ul><li>基于 XML 的用于查询 XML 数据的语言</li></ul></li></ul><h4 id="XML-总结"><a href="#XML-总结" class="headerlink" title="XML 总结"></a>XML 总结</h4><ul><li>XML 可用于交换、共享和存储数据</li><li>XML 文档形成树状结构，在”根”和”叶子”的分支机构开始的</li><li>XML 有非常简单的语法规则。带有正确语法的 XML 是”形式良好”的。有效的 XML 是针对 DTD 进行验证的</li><li>XSLT用于把 XML 转换为其他格式，比如 HTML</li><li>所有现代的浏览器有一个内建的 XML 解析器，可读取和操作 XML</li><li>DOM(Document Object Model）定义了一个访问 XML 的标准方式</li><li>XMLHttpRequest 对象提供了一个网页加载后与服务器进行通信的方式</li><li>XML 命名空间提供了一种避免元素命名冲突的方法</li><li>CDATA 区域内的文本会被解析器忽略</li></ul>]]></content>
      
      
      <categories>
          
          <category> XML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> XML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Junit笔记(一)</title>
      <link href="/2022/09/13/Junit%E7%AC%94%E8%AE%B0-%E4%B8%80/"/>
      <url>/2022/09/13/Junit%E7%AC%94%E8%AE%B0-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h3 id="Junit简述"><a href="#Junit简述" class="headerlink" title="Junit简述"></a>Junit简述</h3><ul><li>junit是用于java单元测试工具，是一个单元测试框架，适用于白盒测试，也适用于回归测试<ul><li>白合测试: 程序的内部逻辑结构和其他信息对测试人员是公开的</li><li>回归测试: 对软件或者环境修复更正后的“再测试”</li><li>单元测试: 最小的测试模块，</li></ul></li><li>特性<ul><li>用于测试期望结果的断言</li><li>用于共享测试数据的测试工具</li><li>方便组织和运行的测试套件</li><li>图形和文本的测试运行器</li></ul></li></ul><h3 id="编写测试用例步骤"><a href="#编写测试用例步骤" class="headerlink" title="编写测试用例步骤"></a>编写测试用例步骤</h3><ul><li>创建被测对象</li><li>调用被测试方法，输入参数</li><li>判断预期结果是否和真实值一样</li></ul><h3 id="Junit语法"><a href="#Junit语法" class="headerlink" title="Junit语法"></a>Junit语法</h3><h4 id="junit3"><a href="#junit3" class="headerlink" title="junit3"></a>junit3</h4><ul><li>测试类都要继承TestCase</li><li>测试方法都要以test开头</li><li>测试三步骤进行测试</li><li>void setUp()方法每次执行测试方法都先执行一次、<ul><li>可以用来实例化对象</li></ul></li><li>void teardown()方法每次测试方法停止测试的时候都执行一次</li></ul><h4 id="Junit4"><a href="#Junit4" class="headerlink" title="Junit4"></a>Junit4</h4><ul><li><p>@Test</p><ul><li>每个测试方法要被标注，同时必须用public void进行修饰，且不能携带参数</li></ul></li><li><p>@Before</p><ul><li>同setup()一个作用</li></ul></li><li><p>@After</p><ul><li>同teardown()一个作用</li></ul></li><li><p>@BeforeClass</p><ul><li>被标记的方法必须为static，每次类初始化执行一次</li></ul></li><li><p>@AfterClass</p><ul><li>被标记的方法必须为static,每次类停止前执行一次</li></ul></li><li><p>ingore</p><ul><li>忽略被标记的方法</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Juint </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git笔记(一)</title>
      <link href="/2022/09/13/Git%E7%AC%94%E8%AE%B0-%E4%B8%80/"/>
      <url>/2022/09/13/Git%E7%AC%94%E8%AE%B0-%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h3 id="git是什么"><a href="#git是什么" class="headerlink" title="git是什么"></a>git是什么</h3><ul><li>一个开源的分布式版本的控制系统，用于处理项目</li><li>分布式版本库的方式</li><li>不仅仅是个版本控制系统，它也是个内容管理系统(CMS)，工作管理系统等。</li></ul><h4 id="git配置"><a href="#git配置" class="headerlink" title="git配置"></a>git配置</h4><ul><li>git config<ul><li>专门用来配置或者读取相应的工作环境变量的工具</li></ul></li><li>查看所有的git配置</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure><ul><li>用户配置<ul><li>配置用户名和邮箱</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;XXX&quot;</span><br><span class="line">git config --global user.email &quot;XXX&quot;</span><br></pre></td></tr></table></figure><ul><li>设置文本编辑器</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.editor XXX</span><br></pre></td></tr></table></figure><p>略</p><h4 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h4><ul><li>克隆git资源作为工作目录</li><li>添加或者修改文件</li><li>如果其他人修改了，你可以更新资源</li><li>在提交前查看修改</li><li>提交修改</li><li>在修改完成后，如果发现错误，可以撤回提交并再次修改并提交</li></ul><p>流程图</p><ul><li><img src="https://cdn.jsdelivr.net/gh/xinyemoon/Image//article_img/image-20220913150753435.png" alt="image-20220913150753435"></li></ul><h4 id="Git的工作区，暂存区和版本库"><a href="#Git的工作区，暂存区和版本库" class="headerlink" title="Git的工作区，暂存区和版本库"></a>Git的工作区，暂存区和版本库</h4><ul><li>工作区：我们电脑上能看见的目录</li><li>暂缓区：.&#x2F;git目录下index文件(.git&#x2F;index)中，也称索引</li><li>版本库：工作区的隐藏目录.git</li></ul><h4 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h4><ul><li>创建仓库<ul><li>生成.git目录，存放gi需求的数据和资源</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init &quot;XXX&quot;</span><br></pre></td></tr></table></figure><ul><li>从git库拷贝项目<ul><li>repository: git仓库</li><li>directory: 本地目录</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &lt;repository&gt; &lt;directory&gt;</span><br></pre></td></tr></table></figure><h4 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h4><ul><li><p>Git 的工作就是创建和保存你项目的快照及与之后的快照进行对比</p></li><li><p>基本六个命令：git clone、git push、git add、git commit、git checkout、git pull</p></li><li><p>流程图：</p><p><img src="https://cdn.jsdelivr.net/gh/xinyemoon/Image//article_img/image-20220913152424189.png" alt="image-20220913152424189"></p></li><li><p>创建：上面已演示</p></li><li><p>修改和提交</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git add //增加文件到缓存区</span><br><span class="line">git status //查看仓看状态</span><br><span class="line">git diff //比较缓存区和工作区文件的不同</span><br><span class="line">git commit //提交到本地仓库</span><br><span class="line">git reset //回退版本</span><br><span class="line">git rm //删除暂存区和工作区的文件</span><br><span class="line">git mv //移动或者重命名工作区文件</span><br></pre></td></tr></table></figure><ul><li>提交日志</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git log //查看历史提交记录</span><br><span class="line">git blame &lt;file&gt; //指定查看文件记录</span><br></pre></td></tr></table></figure><ul><li>远程命令</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git remote //远程仓库操作</span><br><span class="line">git fetch //获取代码库(不能自动merge)</span><br><span class="line">git merge //获取代码库后整合到当前分支</span><br><span class="line">git push //上传远程代码并合并</span><br><span class="line">git pull //下载远程代码并合并</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何搭建一个博客</title>
      <link href="/2022/09/12/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/09/12/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><h4 id="本篇文章搭建博客使用的是hexo博客框架，是基于Node-js安装的，同时，本文对发布部署内容都使用git，需要读者自行安装Node和git"><a href="#本篇文章搭建博客使用的是hexo博客框架，是基于Node-js安装的，同时，本文对发布部署内容都使用git，需要读者自行安装Node和git" class="headerlink" title="本篇文章搭建博客使用的是hexo博客框架，是基于Node.js安装的，同时，本文对发布部署内容都使用git，需要读者自行安装Node和git."></a>本篇文章搭建博客使用的是hexo博客框架，是基于Node.js安装的，同时，本文对发布部署内容都使用git，需要读者自行安装Node和git.</h4><h4 id="hexo框架有许多博客主题，本文使用的是Butterfly"><a href="#hexo框架有许多博客主题，本文使用的是Butterfly" class="headerlink" title="hexo框架有许多博客主题，本文使用的是Butterfly"></a>hexo框架有许多博客主题，本文使用的是Butterfly</h4><h4 id="版本：hexo-6-3-0-butterfly-4-4-0"><a href="#版本：hexo-6-3-0-butterfly-4-4-0" class="headerlink" title="版本：hexo:6.3.0; butterfly:4.4.0"></a>版本：hexo:6.3.0; butterfly:4.4.0</h4><h3 id="初步流程"><a href="#初步流程" class="headerlink" title="初步流程"></a>初步流程</h3><ul><li>安装hexo</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli </span><br></pre></td></tr></table></figure><ul><li>创建存放目录，建议放非系统盘<ul><li>完成后该目录下会有_config.yml等文件</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init &quot;XXX&quot;  </span><br></pre></td></tr></table></figure><ul><li>生成静态html文件<ul><li>该命令是把博客.md等文件生成.html等格式，让用户得以访问</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><ul><li>本地部署</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p><strong>执行完上述命令后，读者可以自行访问git bush界面出现的本地地址，默认是localhost:4000</strong></p><p>其他命令</p><ul><li>清楚静态文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><ul><li>生成.md文件<ul><li>读者也可以自行建立，但需要在文件头部加上必要的“标签”，是hexo对文章进行分类的表示，具体请看hexo官方文档</li><li>官方文档地址：<a href="https://hexo.io/zh-cn/index.html">Hexo</a></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post &quot;XXX&quot;</span><br></pre></td></tr></table></figure><p>好了，如果但是这样，不够美观，所以我选择用Butterfly主题来美化，读者也可以自行到hexo官方或者github等地找合适的主题安装，不过建议选择主题文档详细和常更新的，方便后续的改造。</p><h4 id="Butterfly"><a href="#Butterfly" class="headerlink" title="Butterfly"></a>Butterfly</h4><ul><li>安装butterfly</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly //版本为4.4.0</span><br></pre></td></tr></table></figure><ul><li>安装pug以及stylus的渲染器</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><ul><li>在根目录下的_config.yml文件修改</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><p>到此在运行hexo clean,hexo g,hexo s就可以看到本地浏览下的界面更改了</p><h4 id="基本解释"><a href="#基本解释" class="headerlink" title="基本解释"></a>基本解释</h4><ul><li>根目录下的_config.yml为站点配置文件_,_&#x2F;根目录&#x2F;theme&#x2F;Butterfly&#x2F;_config.yml为主题配置文件，对于界面修改都是基于两个文件进行的</li><li>每次写新的博客内容或者新建删除，都要执行 <em>hexo cl,hexo g,hexo s</em>的步骤，后面部署到服务器后把hexo s改为hexo d 即可。</li></ul><h4 id="Github-Page部署"><a href="#Github-Page部署" class="headerlink" title="Github Page部署"></a>Github Page部署</h4><ul><li><p>需要一个github账号，注册流程不多赘述</p></li><li><p>安装扩展，辅助部署</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-deployer-git</span><br></pre></td></tr></table></figure><ul><li>新建一个repostiory，命名为&lt;你的账号&gt;.github.io,这是为了我们的站点能通过域名访问</li><li>获取你本地git的密钥，辅助到github,进行连接，不多赘述</li><li>验证是否成功，出现你的github账号名代表连接成功</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><ul><li>然后执行hexo cl &amp;&amp; hexo g &amp;&amp; hexo d上传远程仓库</li><li>你就能在&lt;你的账号名&gt;.github.io访问你的站点啦！</li></ul><p><strong>简单的流程到此结束，接下来是阿里云配置</strong></p><h4 id="阿里云域名"><a href="#阿里云域名" class="headerlink" title="阿里云域名"></a>阿里云域名</h4><ul><li><p>在后面，我们不想用尾缀github.io的进行访问，那用其他com,cn等域名行不行?回答是可以的，而且不用域名备案。</p></li><li><p>注册一个阿里云账号，根据需求购买域名，但要注意一下续费收款，有些头年很低，但续费非常高</p><ul><li>阿里云：地址<a href="https://www.aliyun.com/?spm=5176.authc-home.top-nav.dlogo.63834babwfioQc">阿里云-为了无法计算的价值 (aliyun.com)</a></li></ul></li><li><p>注册完成后还要进行身份验证等步骤，具体过程不赘述</p></li><li><p>完成上述步骤后，在域名管理，点击你的域名，在行条上的右手边有解析域名</p></li><li><p>新手直接点新手引导就行，输入你的github那个博客的ip，ip获取可以在git中输入</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping &lt;你的名字&gt;@github.io</span><br></pre></td></tr></table></figure><ul><li>完成后在你的github点击你博客repository的settings，注意不是你个人的头像那里的settings</li><li>找到Page的domins，输入你的阿里云域名并保存，建议勾选下方的https，增加安全性。</li><li>然后在你的repository下建立一个CNAME文件，写入你的阿里云域名，在到你的本地博客的根目录下的source建议同名的文件填上相同的域名，这样做的目的是github会在你更新内容重新写绑定的域名，稳定解析连接</li></ul><h4 id="结语："><a href="#结语：" class="headerlink" title="结语："></a>结语：</h4><p>你可能发现我并没有对主题页面配置有过多的描述，这是因为在hexo官方文档和Butterfly主题文档都有详细的说明，具体请自己去查看。</p><ul><li><a href="https://hexo.io/zh-cn/index.html">Hexo</a></li><li><a href="https://butterfly.js.org/">Butterfly - A Simple and Card UI Design theme for Hexo</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2022/09/11/test/"/>
      <url>/2022/09/11/test/</url>
      
        <content type="html"><![CDATA[<h3 id="1-图片测试"><a href="#1-图片测试" class="headerlink" title="1.图片测试"></a>1.图片测试</h3><ul><li><img src="https://cdn.jsdelivr.net/gh/xinyemoon/Image/Article/202209202246670.png"><br>2.调试评论区是否能正常运行,测试cover能否正常运行</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
